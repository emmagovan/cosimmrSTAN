% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cosimmr_stan.R
\name{cosimmr_stan}
\alias{cosimmr_stan}
\title{Run a \code{cosimmrSTAN_input} object through STAN}
\usage{
cosimmr_stan(
  cosimmrSTAN_in,
  type = "STAN_VB",
  error_type = "process+residual",
  prior_control = list(sigma_shape = c(rep(1, cosimmrSTAN_in$n_tracers)), sigma_rate =
    c(rep(1, cosimmrSTAN_in$n_tracers)), omicron_shape = c(rep(1,
    cosimmrSTAN_in$n_tracers)), omicron_rate = c(rep(1, cosimmrSTAN_in$n_tracers)),
    cauchy_scale = 5),
  vb_control = list(n_samples = 10000, adapt_iter = 30000, algorithm = "fullrank")
)
}
\arguments{
\item{cosimmrSTAN_in}{An object created via the function \code{\link{cosimmrSTAN_load}}}

\item{type}{What type of model to run using STAN. Options are 'STAN_VB}

\item{error_type}{Whether to use 'processxresidual' error term or
'process+residual' term. Defaults to 'process+residual'}

\item{prior_control}{A list of values including arguments named \code{sigma_shape}
(prior values for sigma shape), \code{sigma_rate} (prior values for sigma rate),
\code{omicron_shape} (prior values for omicron shape), \code{omicron_rate}
(prior values for omicron rate), \code{cauchy_scale} (prior value for half-cauchy
distribution on error of random effects)}

\item{vb_control}{A list of values including arguments named \code{n_samples}
(the number of samples) to use in stan VB (defaults to 10000)), \code{adapt_iter}
(the number of adaptive iterations (defaults to 30000)), and \code{algorithm}
(the VB algorithm to use. Defaults to "fullrank")}
}
\value{
an object of class \code{cosimmrSTAN_output} with two named top-level
components: \item{input}{The \code{cosimmrSTAN_input} object given to the
\code{cosimmrSTAN_ffvb} function} \item{output}{A set of outputs produced by
the FFVB function. These can be analysed using the
\code{\link{summary.cosimmrSTAN_output}} and \code{\link{plot.cosimmrSTAN_output}}
functions.}
}
\description{
This is the main function of cosimmrSTAN. It takes a \code{cosimmrSTAN_input} object
created via \code{\link{cosimmrSTAN_load}}, runs it in fixed form
Variational Bayes  via STAN to determine the dietary proportions, and then
outputs a \code{cosimmrSTAN_output} object for further analysis and plotting
via \code{\link{plot.cosimmrSTAN_output}}.
}
\examples{
\donttest{
## See the package vignette for a detailed run through of these examples

# Data set 1: 10 obs on 2 isos, 4 sources, with tefs and concdep
data(geese_data_day1)
x =  c(1,2,3,2,1,3,2,1,2)
cosimmrSTAN_1 <- with(
  geese_data_day1,
  cosimmrSTAN_load(
    formula = mixtures ~ x,
    source_names = source_names,
    source_means = source_means,
    source_sds = source_sds,
    correction_means = correction_means,
    correction_sds = correction_sds,
    concentration_means = concentration_means
  )
)

# Plot
plot(cosimmrSTAN_1)

# Print
cosimmrSTAN_1

# FFVB run
cosimmrSTAN_1_out <- cosimmr_stan(cosimmrSTAN_1)

# Print it
print(cosimmrSTAN_1_out)

# Summary
summary(cosimmrSTAN_1_out, type = "correlations")
summary(cosimmrSTAN_1_out, type = "statistics")
ans <- summary(cosimmrSTAN_1_out, type = c("quantiles", "statistics"))

# Plot
plot(cosimmrSTAN_1_out, type = "prop_density")

}
}
\references{
Andrew C. Parnell, Donald L. Phillips, Stuart Bearhop, Brice X.
Semmens, Eric J. Ward, Jonathan W. Moore, Andrew L. Jackson, Jonathan Grey,
David J. Kelly, and Richard Inger. Bayesian stable isotope mixing models.
Environmetrics, 24(6):387â€“399, 2013.

Andrew C Parnell, Richard Inger, Stuart Bearhop, and Andrew L Jackson.
Source partitioning using stable isotopes: coping with too much variation.
PLoS ONE, 5(3):5, 2010.
}
\seealso{
\code{\link{cosimmrSTAN_load}} for creating objects suitable for this
function, \code{\link{plot.cosimmrSTAN_input}} for creating isospace plots,
\code{\link{summary.cosimmrSTAN_output}} for summarising output, and
\code{\link{plot.cosimmrSTAN_output}} for plotting output.
}
\author{
Emma Govan <emmagovan@gmail.com>, Andrew Parnell
}
